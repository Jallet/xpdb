"""
bison rules

stmt: IF exp THEN list             #flowNode  FLOW, IF
   | IF exp THEN list ELSE list    #flowNode  FLOW, IF
   | WHEN exp THEN list            #flowNode  FLOW, WHEN 
   | exp                          
;

list: /* nothing */ 
   | stmt ';' list                #binoNode  LIST
   ;

exp: exp CMP exp                  #binoNode  BIOP
   | exp '+' exp                  #binoNode  BIOP
   | exp '-' exp                  #binoNode  BIOP
   | exp '*' exp                  #binoNode  BIOP
   | exp '/' exp                  #binoNode  BIOP
   | '(' exp ')'                  #Node      NODE  
   | '-' exp %prec UMINUS 
   | NUMBER                       #Node     NUMBER
   | NAME                         #Node     NAME 
   | NAME '=' exp                 #binoNode NAME 
   | NAME '(' explist ')'         #binoNode CALL
;

explist: exp
 | exp ',' explist               #binoNode ARGS
;
symlist: NAME                    #binoNode SYMBOLS
 | NAME ',' symlist              #binoNode SYMBOLS
;

calclist: /* nothing */
  | calclist stmt EOL {
    if(debug) dumpast($2, 0);
     printf("= %4.4g\n> ", eval($2));
     treefree($2);
    }
  | calclist DEFINE NAME '(' symlist ')' '=' list EOL  #funcNode DEF

  | calclist error EOL { yyerrok; printf("> "); }
 ;

"""
